@model RCBACONFERENCE.Models.EventViewModel

@{
    ViewData["Title"] = "Manage Conference Events";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Manage Conference Events</h2>
        <div>
            <button class="btn btn-secondary me-2" onclick="window.location.href='@Url.Action("UpdateEvents", "Chief")'">
                <i class="bi bi-pencil-square"></i> Show Events
            </button>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger text-center">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }

    <form asp-action="CreateEvent" method="post" enctype="multipart/form-data" class="p-4 border rounded bg-light">
        <div class="form-group">
            <label asp-for="EventName" class="form-label">Event Name</label>
            <input asp-for="EventName" class="form-control" required />
            <span asp-validation-for="EventName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="EventDescription" class="form-label">Event Description</label>
            <textarea asp-for="EventDescription" class="form-control" rows="3" required></textarea>
            <span asp-validation-for="EventDescription" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="EventLocation" class="form-label">Event Location</label>
            <input asp-for="EventLocation" class="form-control" required />
            <span asp-validation-for="EventLocation" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="EventThumbnail" class="form-label">Event Thumbnail (Optional)</label>
            <input asp-for="EventThumbnail" type="file" class="form-control" accept="image/*"/>
            <span asp-validation-for="EventThumbnail" class="text-danger"></span>
        </div>


        <div class="form-group">
            <label asp-for="RegistrationOpen" class="form-label">Registration Open</label>
            <input asp-for="RegistrationOpen" type="datetime-local" class="form-control" required />
            <span asp-validation-for="RegistrationOpen" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="RegistrationDeadline" class="form-label">Registration Deadline</label>
            <input asp-for="RegistrationDeadline" type="datetime-local" class="form-control" required />
            <span asp-validation-for="RegistrationDeadline" class="text-danger"></span>
        </div>



        <h3 class="mt-4">Schedule Events</h3>
        <div id="scheduleContainer">
            <div class="schedule-event">
                <div class="form-group">
                    <label>Event Date</label>
                    <input type="datetime-local" class="form-control" name="Schedules[0].EventDate" required />
                    <span asp-validation-for="Schedules[0].EventDate" class="text-danger"></span> 
                </div>
                <div class="form-group">
                    <label>End Time</label>
                    <input type="datetime-local" class="form-control" name="Schedules[0].EndTime" required />
                    <span asp-validation-for="Schedules[0].EndTime" class="text-danger"></span>
                </div>
                <button type="button" class="btn btn-danger delete-schedule">Delete</button>
            </div>
        </div>

        <button type="button" id="addSchedule" class="btn btn-secondary mt-3">Add Day</button>

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary btn-lg">Create Event</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function updateEndTime(scheduleIndex) {
            var eventDateInput = document.querySelector(`input[name="Schedules[${scheduleIndex}].EventDate"]`);
            var endTimeInput = document.querySelector(`input[name="Schedules[${scheduleIndex}].EndTime"]`);

            if (eventDateInput.value) {
                var eventDateParts = eventDateInput.value.split("T");
                var eventDate = eventDateParts[0];
                var eventTime = eventDateParts[1];

                var currentEndTimeParts = endTimeInput.value.split("T");
                var currentEndTime = currentEndTimeParts.length > 1 ? currentEndTimeParts[1] : eventTime;

                endTimeInput.value = eventDate + 'T' + currentEndTime;
                endTimeInput.removeAttribute('readonly');
                endTimeInput.setAttribute('min', eventDate + 'T' + eventTime);
                endTimeInput.setAttribute('max', eventDate + 'T23:59');
            } else {
                endTimeInput.value = '';
                endTimeInput.setAttribute('readonly', 'readonly');
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Initial setup for the first schedule
            var initialEventDateInput = document.querySelector("input[name='Schedules[0].EventDate']");
            var initialEndTimeInput = document.querySelector("input[name='Schedules[0].EndTime']");
            var initialDeleteButton = document.querySelector(".delete-schedule");

            updateEndTime(0);
            initialEventDateInput.addEventListener('input', function () {
                updateEndTime(0);
            });

            if (initialDeleteButton) {
                initialDeleteButton.style.display = 'none';
            }

            document.getElementById('addSchedule').addEventListener('click', function () {
                const scheduleContainer = document.getElementById('scheduleContainer');
                const scheduleCount = scheduleContainer.getElementsByClassName('schedule-event').length;

                // Create a new schedule entry
                const newSchedule = `
                        <div class="schedule-event mt-3">
                            <div class="form-group">
                                <label>Event Date</label>
                                <input type="datetime-local" class="form-control" name="Schedules[${scheduleCount}].EventDate" required />
                            </div>
                            <div class="form-group">
                                <label>End Time</label>
                                <input type="datetime-local" class="form-control" name="Schedules[${scheduleCount}].EndTime" required />
                            </div>
                            <button type="button" class="btn btn-danger delete-schedule">Delete</button>
                        </div>`;

                scheduleContainer.insertAdjacentHTML('beforeend', newSchedule);

                const newEventDateInput = document.querySelector(`[name="Schedules[${scheduleCount}].EventDate"]`);
                const newEndTimeInput = document.querySelector(`[name="Schedules[${scheduleCount}].EndTime"]`);
                const newDeleteButton = scheduleContainer.lastElementChild.querySelector(".delete-schedule");

                updateEndTime(scheduleCount);

                newEventDateInput.addEventListener('input', function () {
                    updateEndTime(scheduleCount);
                });

                if (scheduleCount > 0) {
                    newDeleteButton.style.display = 'inline-block';
                } else {
                    newDeleteButton.style.display = 'none';
                }

                newDeleteButton.addEventListener('click', function () {
                    scheduleContainer.removeChild(newDeleteButton.parentElement);
                });
            });
        });
    </script>
}